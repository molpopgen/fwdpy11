name: Build, test, and deploy, wheels

on:
  schedule:
    - cron: "0 0 1 * *"
  release:
    types: [created]

jobs:
  macOS:
    runs-on: macos-latest
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            submodules: true
            fetch-depth: 0
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install deps
        run: |
          brew install gsl
          # Upgrade pip to get bdist_wheel
          pip install --upgrade pip
          pip install setuptools wheel pybind11-global
          # Instead of letting setup.py install a newer numpy we install it here
          # using the oldest supported version for ABI compatibility
          pip install oldest-supported-numpy
      - name: Build module
        run: |
          python -VV
          python setup.py build_ext --inplace
      - name: Build Wheel
        run: |
          python setup.py bdist_wheel
      - name: Delocate to bundle dynamic libs
        run: |
          pip install delocate
          delocate-wheel -v dist/*.whl
      - name: Upload Wheels
        uses: actions/upload-artifact@v2
        with:
          name: macOS-wheel-${{ matrix.python }}
          path: dist

  manylinux2014:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            submodules: true
            fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build sdist
        shell: bash
        run: |
          python setup.py sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist

      - name: Build wheels in docker
        shell: bash
        run: |
          docker run --rm -v `pwd`:/project -w /project quay.io/pypa/manylinux2014_x86_64 bash .github/workflows/manylinux/buildwheels.sh

      - name: Upload Wheels
        uses: actions/upload-artifact@v2
        with:
          name: linux-wheels
          path: dist/wheelhouse

  manylinux2014_test:
    runs-on: ubuntu-latest
    needs: ['manylinux2014']
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          name: linux-wheels
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install wheel and test
        run: |
          python -VV
          # Install the local wheel
          pip install fwdpy11 --only-binary fwdpy11 -f .
          python -c "import fwdpy11;print(fwdpy11.__version__)"

  macOS_test:
    needs: ['macOS']
    runs-on: macos-latest
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          name: macOS-wheel-${{ matrix.python }}
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install wheel and test
        run: |
          python -VV
          # Install the local wheel
          pip install fwdpy11 --only-binary fwdpy11 -f .
          python -c "import fwdpy11;print(fwdpy11.__version__)"

  upload_to_PyPI:
    runs-on: ubuntu-latest
    needs: ['macOS_test', 'manylinux2014_test']
    steps:
      - name: Download all
        uses: actions/download-artifact@v2
      - name: Move to dist
        run: |
          mkdir dist
          cp */*.{whl,gz} dist/.
      - name: Publish distribution to PRODUCTION PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_UPLOAD }}
