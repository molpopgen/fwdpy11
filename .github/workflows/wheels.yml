name: Build, test, and deploy, wheels

on:
  schedule:
    - cron: "0 0 1 * *"
  release:
    types: [created]
  pull_request:
    branches: [main, dev]

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
            submodules: true
            fetch-depth: 0

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Build sdist
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools
          python setup.py sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  manylinux2_28:
    name: Build and test Linux wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["python3.8", "python3.9", "python3.10", "python3.11", "python3.12"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
            submodules: true
            fetch-depth: 0

      - name: Build wheels in docker
        shell: bash
        run: |
          bash deployment/linux_wheels/run_wheel_workflow.sh ${{ matrix.python }}
          #docker run --rm -v `pwd`:/project -w /project quay.io/pypa/manylinux_2_28_x86_64:2022-10-02-69a0972 bash .github/workflows/manylinux/buildwheels.sh

      - name: Upload Wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux-wheels-${{ matrix.python }}
          path: dist/wheelhouse

  manylinux2_28_test:
    name: Build package from source dist
    runs-on: ubuntu-latest
    needs: ['build_sdist']
    strategy:
      matrix:
        python: [3.8, 3.9, "3.10", "3.11", "3.12"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download sdist
        uses: actions/download-artifact@v4.1.4
        with:
          name: sdist
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install sdist into venv
        run: |
          python -m venv sdist_venv
          source sdist_venv/bin/activate
          python -m pip install --upgrade pip setuptools
          python -m pip install *.gz
          # The cd is to move us away from
          # the project repo root where the module is not built
          cd sdist_venv
          python -c "import fwdpy11;print(fwdpy11.__version__)"
          deactivate
          rm -rf sdist_venv

          # - name: Install wheel and test
          #   run: |
          #     python -VV
          #     # pip install minimal dependencies
          #     pip install --upgrade pip
          #     pip install wheel
          #     pip install -r requirements/wheel_building_workflow.txt
          #     # delete the source dir to prevent pip from mistaking it for 
          #     # the package
          #     rm -rf fwdpy11
          #     # Install the local wheel
          #     pip install fwdpy11 --no-deps --no-index --pre --only-binary fwdpy11 -f .
          #     python -c "import fwdpy11;print(fwdpy11.__version__)"

  upload_to_PyPI:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: ['manylinux2_28', 'manylinux2_28_test']
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download all
        uses: actions/download-artifact@v4.1.4
      - name: Move to dist
        run: |
          mkdir dist
          cp */*.{whl,gz} dist/.
      - name: Publish distribution to PRODUCTION PyPI
        if: github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_UPLOAD }}
